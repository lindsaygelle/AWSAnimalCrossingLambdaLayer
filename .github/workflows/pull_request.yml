name: "pull_request"

on:
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  pylint:
    defaults:
      run:
        shell: "bash"
    env:
      PIP_TIMEOUT: 10
    permissions:
      contents: "write"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Run Pylint install
        run: |
          pip install pylint \
          --no-color \
          --no-input \
          --timeout=$PIP_TIMEOUT \
          --verbose
      - name: Run Pylint tests
        run: |
          pylint \
          --verbose **/*.py
  pip:
    defaults:
      run:
        shell: "bash"
    env:
      PIP_TIMEOUT: 10
    needs:
      - pylint
    permissions:
      contents: "read"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        directory:
          - "model"
          - "mysql"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - uses: hashicorp/setup-terraform@v1
      - name: ${{ matrix.directory }}
        working-directory: ${{ matrix.directory }}
        run: |
          ls -l
      - name: Run (${{ matrix.directory }}) Python@v4 pip install (dry)
        working-directory: ${{ matrix.directory }}
        run: |
          pip install \
          -r $(pwd)/src/python/requirements.txt \
          -t $(pwd)/src/python \
          --dry-run \
          --no-color \
          --no-input \
          --no-user \
          --timeout=$PIP_TIMEOUT \
          --verbose
  terraform:
    defaults:
      run:
        shell: "bash"
    environment:
      name: "production"
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    needs:
      - pip
    permissions:
      contents: "read"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        directory:
          - "model"
          - "mysql"
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v1
      - name: Run (${{ matrix.directory }}) terraform@v1 init
        working-directory: ${{ matrix.directory }}
        run: |
          terraform init \
          -input=false \
          -no-color \
          -reconfigure
      - name: Run (${{ matrix.directory }}) terraform@v1 fmt
        working-directory: ${{ matrix.directory }}
        run: |
          terraform fmt \
          -check \
          -list=true \
          -no-color \
      - name: Run (${{ matrix.directory }}) terraform@v1 plan
        working-directory: ${{ matrix.directory }}
        run: |
          terraform plan \
          -input=false \
          -no-color \
          -lock=false
